plugins {
  id 'groovy'
  id 'jacoco'
  id 'codenarc'
  id 'maven-publish'
  id 'com.jfrog.bintray' version '1.7.3'
  id 'com.github.kt3k.coveralls' version '2.6.3'
  id 'com.benjaminsproule.swagger' version '1.0.6'
  id 'org.hidetake.swagger.generator' version '2.11.0'
  id 'com.github.johnrengelman.shadow' version '5.1.0'
}

repositories {
  mavenLocal()
  jcenter()
  jcenter()
}

dependencies {
  implementation 'org.codehaus.groovy:groovy:3.0.1'
  implementation 'io.dropwizard:dropwizard-core:2.0.2'
  implementation 'com.smoketurner:dropwizard-swagger:2.0.0-1'
  implementation 'ru.vyarus:dropwizard-guicey:4.1.0'
  implementation 'org.valid4j:valid4j:0.5.0'
  implementation 'org.hamcrest:hamcrest-all:1.3'
  implementation 'com.google.code.findbugs:jsr305:3.0.2'

  swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.8'

  testImplementation 'cglib:cglib-nodep:3.2.6'
  testImplementation 'io.dropwizard:dropwizard-testing:2.0.2'
  testImplementation 'org.spockframework:spock-core:2.0-M2-groovy-3.0'
}

swaggerSources {
  "${project.name}" {
    inputFile = file("${project.buildDir}/swagger-ui/swagger.json")
    code {
      language = 'java'
      configFile = file('swagger-config.json')
    }
  }
}

codenarc {
  configFile = rootProject.file('codenarc.groovy')
}

tasks.withType(Test) {
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
  }
}

task buildClient(type: Copy) {
  into "${rootDir}/${project.name}-client"
  from "${buildDir}/swagger-code-${project.name}"
}

clean.doFirst {
  delete "${rootDir}/${project.name}-client"
}

jar {
  manifest {
    attributes 'Main-Class': project.mainClass
  }
}

shadowJar {
  mergeServiceFiles()
}

swagger {
  apiSource {
    springmvc = false
    locations = ['io.cratekube']
    schemes = ['http', 'https']
    host = 'localhost:8080'
    basePath = '/'
    info {
      title = "${project.name} swagger spec"
      version = 'v1'
      description = "swagger spec for the ${project.name}"
    }
    swaggerDirectory = "${project.buildDir}/swagger-ui"
  }
}

task downloadAllDeps(type: Exec) {
  configurations.each {
    try {
      it.files
    } catch (IllegalStateException e) {
    }
  }

  commandLine 'echo', 'Downloaded all dependencies'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier 'javadoc'
  from javadoc.destinationDir
}

def pomConfig = {
  licenses {
    license {
      name 'The Apache Software License, Version 2.0'
      url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      distribution 'repo'
    }
  }
  developers {
    developer {
      id 'kod4n'
      name 'Andrew Allen'
      email 'anallen@cisco.com'
    }
  }
  scm {
    url 'https://github.com/cratekube/dropwizard-groovy-template'
  }
}

//subprojects {
//  publishing {
//    mavenPublication(MavenPublication) {
//      from components.java
//      artifact sourcesJar {
//        classifier 'sources'
//      }
//      artifact javadocJar {
//        classifier 'javadoc'
//      }
//      groupId 'io.cratekube'
//      artifactId 'dropwizard-groovy-template-client'
//      version '1.0.0'
//      pom.withXml {
//        def root = asNode()
//        root.appendNode('description', 'A REST API client for the dropwizard-groovy-template')
//        root.appendNode('name', 'Dropwizard Groovy Template Client')
//        root.appendNode('url', 'https://github.com/cratekube/dropwizard-groovy-template')
//        root.children().last() + pomConfig
//      }
//    }
//  }
//}

//bintray {
//  user 'bintray_user'
//  key 'bintray_key'
//  publications = ['mavenPublication']
//
//  pkg {
//    repo = 'dropwizard-groovy-template-client'
//    name = 'dropwizard-groovy-template-client'
//    userOrg = 'cratekube'
//    licenses = ['Apache-2.0']
//    vcsUrl = 'https://github.com/cratekube/dropwizard-groovy-template.git'
//    version {
//      name = '1.0.0'
//      desc = '1.0.0'
//      released = new Date()
//    }
//  }
//}

allprojects {
  version = "${System.env.APP_VERSION ?: '1.0-SNAPSHOT'}"
}

resolveSwaggerTemplate.dependsOn generateSwaggerDocumentation
buildClient.dependsOn generateSwaggerCode
